!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).data=t()}(this,(function(){"use strict";var e=Object.prototype.toString;const t={"[object Boolean]":"boolean","[object Number]":"number","[object String]":"string","[object Undefined]":"undefined","[object Null]":"null","[object Array]":"array","[object Object]":"object","[object Function]":"function","[object Symbol]":"symbol","[object Date]":"date","[object Json]":"json","[object Set]":"set","[object Map]":"map"};function o(o){const n=e.call(o),r=t[n];if(void 0===r)throw new Error(`暂不支持判断 ${n} 类型，请联系开发维护人员进行添加`);return r}function n(e){if(null===e)return null;if("object"!=typeof e)return e;if(e.constructor===Date)return new Date(e);const t=new e.constructor;for(const o in e)if(Object.prototype.hasOwnProperty.call(e,o)){const r=e[o];t[o]="object"==typeof r?n(r):r}return t}return{deepAssign:function(...e){if(0===e.length)throw new Error("请输入深拷贝参数");if(e.length>1)throw Error("只处理单参情况，不支持多参");let t=Object.create(null);switch(o(e[0])){case"array":t=function(e){const t=[];for(let r=0;r<e.length;++r){const c=o(e[r]);t[r]="object"===c||"date"===c?n(e[r]):e[r]}return t}(e[0]);break;case"object":t=n(e[0]);break;default:throw Error("只处理数组和对象，不支持其他类型")}return t},delSpac:function(e,t){let o="";switch(t){case"left":o=/^[\s]+/g;break;case"right":o=/([\s]*)$/g;break;case"both":o=/(^\s*)|(\s*$)/g;break;default:o=/[\s]+/g}let n=e.replace(o,"");if("middle"===t){n=e.match(/(^\s*)/g)[0]+n+e.match(/(\s*$)/g)[0]}return n}}}));
